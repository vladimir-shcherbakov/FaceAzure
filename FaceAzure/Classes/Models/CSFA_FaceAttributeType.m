/**
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

#import "CSFA_FaceAttributeType.h"

/**
 * Defines values for CSFA_FaceAttributeType.
 */
@implementation CSFA_FaceAttributeType
+ (NSArray*)values {
    static NSArray *allValues;
    static dispatch_once_t onceToken;
    dispatch_once(&onceToken, ^{
        allValues = @[
            @"age",
            @"gender",
            @"headPose",
            @"smile",
            @"facialHair",
            @"glasses",
            @"emotion",
            @"hair",
            @"makeup",
            @"occlusion",
            @"accessories",
            @"blur",
            @"exposure",
            @"noise"
        ];
    });
    return allValues;
}
/** Enum value age. */
+ (CSFA_FaceAttributeType*)AGE {
    return [CSFA_FaceAttributeType values][0];
}
/** Enum value gender. */
+ (CSFA_FaceAttributeType*)GENDER {
    return [CSFA_FaceAttributeType values][1];
}
/** Enum value headPose. */
+ (CSFA_FaceAttributeType*)HEAD_POSE {
    return [CSFA_FaceAttributeType values][2];
}
/** Enum value smile. */
+ (CSFA_FaceAttributeType*)SMILE {
    return [CSFA_FaceAttributeType values][3];
}
/** Enum value facialHair. */
+ (CSFA_FaceAttributeType*)FACIAL_HAIR {
    return [CSFA_FaceAttributeType values][4];
}
/** Enum value glasses. */
+ (CSFA_FaceAttributeType*)GLASSES {
    return [CSFA_FaceAttributeType values][5];
}
/** Enum value emotion. */
+ (CSFA_FaceAttributeType*)EMOTION {
    return [CSFA_FaceAttributeType values][6];
}
/** Enum value hair. */
+ (CSFA_FaceAttributeType*)HAIR {
    return [CSFA_FaceAttributeType values][7];
}
/** Enum value makeup. */
+ (CSFA_FaceAttributeType*)MAKEUP {
    return [CSFA_FaceAttributeType values][8];
}
/** Enum value occlusion. */
+ (CSFA_FaceAttributeType*)OCCLUSION {
    return [CSFA_FaceAttributeType values][9];
}
/** Enum value accessories. */
+ (CSFA_FaceAttributeType*)ACCESSORIES {
    return [CSFA_FaceAttributeType values][10];
}
/** Enum value blur. */
+ (CSFA_FaceAttributeType*)BLUR {
    return [CSFA_FaceAttributeType values][11];
}
/** Enum value exposure. */
+ (CSFA_FaceAttributeType*)EXPOSURE {
    return [CSFA_FaceAttributeType values][12];
}
/** Enum value noise. */
+ (CSFA_FaceAttributeType*)NOISE {
    return [CSFA_FaceAttributeType values][13];
}
+ (CSFA_FaceAttributeType *)fromString:(NSString *)string {
    if (![[CSFA_FaceAttributeType values]containsObject:string]) {
        @throw [NSException exceptionWithName:@"EnumCastException" reason:@"The string is not the enum member" userInfo:nil];
    }
    return (CSFA_FaceAttributeType *)string;
}
+ (NSString *)toStringValue:(CSFA_FaceAttributeType *)value {
    if (![[CSFA_FaceAttributeType values]containsObject:value]) {
        @throw [NSException exceptionWithName:@"EnumCastException" reason:@"Enum value doesn't exist" userInfo:nil];
    }
    return (NSString *)value;
}
@end
